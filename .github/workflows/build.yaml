name: Build
on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 18
        uses: actions/setup-java@v1
        with:
          java-version: 18
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Configure GPG Key
        env:
          GPG_SECRET_KEY: ${{ secrets.SONATYPE_GPG_SECRET_KEY }}
        run: |
          mkdir -p ~/.gnupg/
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          gpg-connect-agent reloadagent /bye
          printf "$GPG_SECRET_KEY" | base64 --decode > ~/.gnupg/private.key
          echo ${{ secrets.SONATYPE_GPG_PASSPHRASE }} | gpg --batch --yes --passphrase-fd 0 --import ~/.gnupg/private.key
      - name: Setup TAG
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_REF: ${{ github.ref }}
        run: mvn -B versions:set -DnewVersion=${GITHUB_REF##*/}
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_GPG_PRIVATEKEY: ${{ secrets.SONATYPE_GPG_PRIVATEKEY }}
          SONATYPE_GPG_PASSPHRASE: ${{ secrets.SONATYPE_GPG_PASSPHRASE }}
        run: |
          export MAVEN_OPTS=-Dmaven.artifact.threads=100
          # mvn -s .mvn/settings.xml -Prelease deploy org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${SONAR_PROJECT_KEY} -Dsonar.organization=raffaeleragni -Dsonar.host.url=https://sonarcloud.io
          mvn package
